<div class="flex-column" style="padding: 20px">
    <div class="design-title-container">
        <div class="design-title-text">Hephillu3d</div>        
    </div>
    <div class="content-container">
        <div class="content-column-container design-content-column-container">
            <div class="content-column-title">
                Upload & Preview
            </div>
            <div class="content-column-subtitle">
                Choose how you'd like to start:
            </div>
            <div class="content-column-radio-button-list-item">
                <input
                    type="radio"
                    id="model-option-radio-button"
                    name="upload-option"
                    class="radio"
                    onclick="showHidePromptInput()"
                />
                <label for="upload-options" class="content-column-radio-button-label">Upload Your 3D Model</label>                
            </div>              
            <div class="content-column-radio-button-sublabel">
                (.glb only)
            </div>      
            <div class="content-column-radio-button-list-item">
                <% if (session) { %>
                <input
                    type="radio"
                    id="text-option-radio-button"
                    name="upload-option"
                    class="radio"
                    onclick="showHidePromptInput()"                    
                />
                <label for="upload-options" class="content-column-radio-button-label">Type a description and let our AI create your model!</label>  
                <% } else { %>
                <input
                    type="radio"
                    id="text-option-radio-button"
                    name="upload-option"
                    class="radio"
                    onclick="showHidePromptInput()"    
                    disabled                
                />
                <label for="upload-options" class="content-column-radio-button-label" style="font-style: italic; color: gray;">(Members only!) Type a description and let our AI create your model!</label>  
                <% } %>                               
            </div> 
            <!--
            <div class="content-column-uploader" id="file-uploader" style="display: none">
                <input
                    type="file"
                    id="image-input"
                    name="image-input"
                    accept="image/png, image/jpeg"
                    class="button"
                    style="display:none;"
                    onchange="updateFileSelectButtonLabel()"
                />
                <label for="image-input" class="file-select-button" id="file-select-button-label">Select File</label>
            </div>   
            --> 
             <div class="content-column-uploader" id="file-uploader" style="display: none">
                <input
                    type="file"
                    id="model-input"
                    name="model-input"
                    accept=".glb"
                    class="button"
                    style="display:none;"
                    onchange="updateFileSelectButtonLabel()"
                />
                <label for="model-input" class="file-select-button" id="file-select-button-label">Select File</label>
            </div>  
            <div class="upload-loader" style="display: none" id="upload-loader"><img id="loader-gif" width=15 height=15 src="images/loading.gif"/><span id="image-progress"> processing 0%</span></div>
            <div class="content-column-textarea" id="prompt-input" style="display: none">
                <textarea type="text" id="prompt-input-textarea" style="resize: none"></textarea> 
            </div>
            <div class="content-column-button-container">
                <div class="content-column-button">
                    <button onclick="handleContinue()">
                        Continue
                    </button>
                </div>
            </div>
        </div>
        <div class="content-column-container design-content-column-container" name="requires-upload" style="color: gray; background-color: #eee; pointer-events: none;">
            <div class="content-column-title">
                Design Your Glow
            </div>
            <div class="content-column-subtitle">
                Size:
            </div>
            <div class="content-column-radio-button-list-item">
                <input
                    type="radio"
                    id="small-option-radio-button"
                    name="glow-option"
                    class="radio"
                    onclick="setGlowOption('Small')"
                />
                <label for="glow-options" class="content-column-radio-button-label">Small</label>                
            </div>         
            <div class="content-column-radio-button-list-item">
                <input
                    type="radio"
                    id="medium-option-radio-button"
                    name="glow-option"
                    class="radio"
                    onclick="setGlowOption('Medium')"
                />
                <label for="glow-options" class="content-column-radio-button-label">Medium</label>                
            </div><div class="content-column-radio-button-list-item">
                <input
                    type="radio"
                    id="large-option-radio-button"
                    name="glow-option"
                    class="radio"
                    onclick="setGlowOption('Large')"
                />
                <label for="glow-options" class="content-column-radio-button-label">Large</label>                
            </div>
            <hr/>
            <div class="content-column-radio-button-list-item">
                <input
                    type="checkbox"
                    id="led-candle-option-checkbox"
                    name="candle-option"
                    class="checkbox"
                    onclick="setLedCandle(this)"
                />
                <label for="candle-options" class="content-column-radio-button-label">LED Candle</label>                
            </div>
            <div class="content-column-radio-button-sublabel">
                Add an LED tea light candle inside
            </div>
            <div class="content-column-button-container">
                <div class="content-column-button">
                    <button name="requires-upload-button" style="background-color: #aaa;">
                        Add to Cart
                    </button>
                </div>
            </div>
        </div>
        <div class="content-column-container design-content-column-container" name="requires-add-to-cart" style="color: gray; background-color: #eee; pointer-events: none;" >
            <div class="content-column-title">
                Checkout
            </div>
            <div class="content-column-invoice-container" id="invoice-container" style="display: none">
                <!-- template -->
                <div class="flex-row">
                    <div class="content-column-invoice-preview-column" id="preview-result">
                        <img name="preview-thumbnail" style="border-radius: 7px" height=100 src="images/home.png" />
                    </div>
                    <div class="content-column-invoice-preview-column">                        
                        <textarea id="name-textarea" placeholder="Give it a name!"></textarea>
                        <div class="content-column-invoice-preview-column-subtitle" id="glow-option-value">
                        </div>
                        <div class="content-column-invoice-preview-column-candle-type" style="display: none", id="led-candle-value">
                            LED Candle
                        </div>
                    </div>
                </div>
                <hr/>
                <div class="content-column-invoice-amount-container">
                    <div class="content-column-invoice-amount-line-item">
                        <div class="content-column-invoice-amount-line-item-title">
                            Subtotal
                        </div>
                        <div class="content-column-invoice-amount-line-item-amount">
                            $25.00
                        </div>
                    </div>
                    <div class="content-column-invoice-amount-line-item">
                        <div class="content-column-invoice-amount-line-item-title">
                            Shipping
                        </div>
                        <div class="content-column-invoice-amount-line-item-amount">
                            $4.99
                        </div>
                    </div>
                    <hr/>
                    <div class="content-column-invoice-amount-line-item">
                        <div class="content-column-invoice-amount-line-item-title">
                            Total
                        </div>
                        <div class="content-column-invoice-amount-line-item-amount">
                            $29.99
                        </div>
                    </div>
                </div>
                <!-- end template -->
            </div>
            <div class="content-column-button-container">
                <div class="content-column-button">
                    <button name="requires-add-to-cart" style="background-color: #aaa;">
                        Proceed to Payment
                    </button>
                </div>
            </div>
        </div>
    </div>   
    <div class="upload-preview content-column-container">
        <img src="" name="preview-thumbnail" style="display: none; border-radius: 5px;"/>
    </div> 
</div>
<div id="3d-model-viewer" class="modal">
  <!-- Modal content -->
  <div class="modal-content">
    <span class="close" onclick="close3dViewer()">&times;</span>
    <model-viewer 
        style="margin: auto; height: 400px; width: 400px;"
        id="uploaded-3d-model"
        alt="uploaded 3d model"
        src=""
        shadow-intensity="1"
        camera-controls touch-action="pan-y"></model-viewer>
  </div>

</div>
<script>
    const showHidePromptInput = function() {
        const textOptionRadioButton = document.getElementById("text-option-radio-button");
        const promptInput = document.getElementById("prompt-input");
        const fileUploader = document.getElementById("file-uploader");
        if (textOptionRadioButton.checked) {
            promptInput.style.display = "unset";
            fileUploader.style.display = "none";
        } else {
            promptInput.style.display = "none";
            fileUploader.style.display = "unset";
        }
    }
    const updateFileSelectButtonLabel = function() {
        const label = document.getElementById('file-select-button-label');
        const imageInput = document.getElementById("model-input")
        label.innerHTML = imageInput.files[0].name;
    }

    const setCheckoutElems = function(thumbnailUrl) {
        if (thumbnailUrl) {
            const previewThumbnails = document.getElementsByName("preview-thumbnail");
            for (let i = 0; i < previewThumbnails.length; i++) {
                previewThumbnails[i].setAttribute('src', thumbnailUrl);
                previewThumbnails[i].style.display = "unset";
            }
        }        
        const loaderGif = document.getElementById("loader-gif");
        loaderGif.style.display = 'none'     
        const invoiceContainer = document.getElementById("invoice-container");
        invoiceContainer.style.display = 'unset';  
    }

    const checkReviewProgress = async function(taskId) {
        
    }

    const checkTaskProgress = async function(taskId) {
        var progress = 0;
        while (progress < 100) {
            res = await fetch("/api/task/?id=" + taskId);
            if (res.ok) {
                var json = await res.json();
                progress = json.progress;
                const imageProgress = document.getElementById("image-progress");
                imageProgress.innerHTML = ` processing ${progress}%`;
                if (progress === 100) {
                    const requiresUploadElems = document.getElementsByName('requires-upload');
                    for (let i = 0; i < requiresUploadElems.length; i++) {
                        requiresUploadElems[i].style.color = 'black';
                        requiresUploadElems[i].style.backgroundColor = 'white';
                        requiresUploadElems[i].style.pointerEvents = 'unset';
                    } 
                    const requiresUploadButtons = document.getElementsByName('requires-upload-button');
                    for (let i = 0; i < requiresUploadButtons.length; i++) {
                        requiresUploadButtons[i].style.backgroundColor = '#F80';
                    } 
                    setCheckoutElems(json.thumbnail_url);
                }
            }
            else if (res.status === 404) {
                progress = 100;
            }
            await new Promise(resolve => setTimeout(resolve, 5000));
        }
    }

    const uploadImage = async function() {         
        const imageInput = document.getElementById("image-input")
        const file = imageInput.files[0];
        imageInput.disabled = true;
        const uploadLoader = document.getElementById("upload-loader");
        uploadLoader.style.display = "unset";
        
        document.getElementById("text-option-radio-button").disabled = true;

        var data = new FormData()
        data.append('file', imageInput.files[0])

        var taskId = "";
        var res = await fetch("/api/image", { body: data, method: "POST" });
        var json = {}
        if (res.ok) {
            json = await res.json();
            taskId = json.taskId;          
            localStorage.setItem("taskId", taskId);   
            await checkTaskProgress(taskId);
        }
    }
    const uploadModel = async function() {         
        const modelInput = document.getElementById("model-input")
        const file = modelInput.files[0];
        modelInput.disabled = true;
        const uploadLoader = document.getElementById("upload-loader");
        uploadLoader.style.display = "unset";
        
        document.getElementById("text-option-radio-button").disabled = true;

        var data = new FormData()
        data.append('file', modelInput.files[0])

        var s3File = "";
        var res = await fetch("/api/model", { body: data, method: "POST" });
        var json = {}
        if (res.ok) {
            json = await res.json();
            s3File = json.s3File;
            const modelViewer = document.getElementById("uploaded-3d-model");
            modelViewer.setAttribute("src", s3File);
            const imageProgress = document.getElementById("image-progress");
            imageProgress.innerHTML = ` processing 100%`;      
            setCheckoutElems();                
            const previewThumbnail = document.getElementById("preview-thumbnail");
            previewThumbnail.setAttribute('src', "/images/preview.png")
            previewThumbnail.setAttribute('onclick', "open3dViewer()")
            previewThumbnail.style.cursor = "pointer";  
        }
    }
    const open3dViewer = async function() {
        var modal = document.getElementById("3d-model-viewer");
        modal.style.display = "block";
    }
    const close3dViewer = async function() {
        var modal = document.getElementById("3d-model-viewer");
        modal.style.display = "none";
    }
    window.onclick = function(event) {        
        var modal = document.getElementById("3d-model-viewer");
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
    const handleContinue = async function() {        
        const textOptionRadioButton = document.getElementById("text-option-radio-button");
        const modelOptionRadioButton = document.getElementById("model-option-radio-button");
        const imageOptionRadioButton = document.getElementById("image-option-radio-button");
        const promptInputTextArea = document.getElementById("prompt-input-textarea");
        if (textOptionRadioButton.checked) {
            document.getElementById("model-option-radio-button").disabled = true;            
            const uploadLoader = document.getElementById("upload-loader");
            uploadLoader.style.display = "unset";  
            var data = JSON.stringify({
                text: promptInputTextArea.value
            });
            var res = await fetch("/api/text", { 
                headers: { "Content-Type": "application/json" },
                body: data,
                method: "POST"
            });
            var json = {};            
            var taskId = "";
            if (res.ok) {
                json = await res.json();
                taskId = json.taskId;        
                localStorage.setItem("taskId", taskId);  
                                       
                await checkTaskProgress(taskId);
            }
        } else if (modelOptionRadioButton.checked) {
            await uploadModel();
        }
         else if (imageOptionRadioButton.checked) {
            await uploadModel();
        }
    }

    const setGlowOption = function(option) {
        const glowOptionValue = document.getElementById("glow-option-value");
        glowOptionValue.innerHTML = "Size, " + option;
        localStorage.setItem("glowOption", option)
    }

    const setLedCandle = function(elem) {
        const ledCandleValue = document.getElementById("led-candle-value");
        if (elem.checked) {
            ledCandleValue.style.display = "unset";
        } else {
            ledCandleValue.style.display = "none";
        }
        localStorage.setItem("ledCandle", elem.checked)
    }

    const nameTextArea = document.getElementById("name-textarea");
    nameTextArea.addEventListener("keyup", () => {
        localStorage.setItem("nameTextArea", nameTextArea.value)
    })

    var taskId = localStorage.getItem("taskId");
    if (taskId) {
        checkTaskProgress(taskId);
    }

    var glowOption = localStorage.getItem("glowOption");
    if (glowOption !== "null") {
        const glowOptionRadioButton = document.getElementById(glowOption.toLowerCase() + "-option-radio-button");
        glowOptionRadioButton.checked = true;
    }

    var ledCandle = localStorage.getItem("ledCandle");
    if (ledCandle === "true") {
        const ledCandleValue = document.getElementById("led-candle-value");
        ledCandleValue.style.display = "unset";       
        const ledCandleOptionCheckBox = document.getElementById("led-candle-option-checkbox");
        ledCandleOptionCheckBox.checked = true;
    }   

    var name = localStorage.getItem("nameTextArea");
    if (name !== "null") {
        nameTextArea.value = name;
    }
</script>
<script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js"></script>